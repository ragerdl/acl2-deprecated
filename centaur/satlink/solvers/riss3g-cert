#!/usr/bin/env perl
#
# SATLINK - Link from ACL2 to SAT Solvers
# Copyright (C) 2013 Centaur Technology
#
# Contact:
#   Centaur Technology Formal Verification Group
#   7600-C N. Capital of Texas Highway, Suite 300, Austin, TX 78731, USA.
#   http://www.centtech.com/
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.  This program is distributed in the hope that it will be useful but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.  You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335, USA.
#
# Original author: Jared Davis <jared@centtech.com>


# RISS3G-CERT
#
# This script is part of Satlink, a tool for connecting ACL2 to SAT solvers.
# for more information on Satlink, see, e.g.,
#
#     http://fv.centtech.com/acl2/latest/doc/?topic=ACL2____SATLINK
#
# Prerequisites: "riss3gSimp" and "drup-trim" are installed and in your PATH.
#
# Usage:  russ3g-cert [OPTIONS] FILE
#
# Where:
#
#   - [OPTIONS] are any extra options for russ3gSimp.
#
#     (This script automatically supplies the options that are necessary to
#      tell the solver to emit a proof.)
#
#   - FILE is the input dimacs CNF file you want to process.  We dumbly assume
#     the file to process comes last, so that we don't have to know which
#     options the solver takes.

use warnings;
use strict;
use FindBin qw($RealBin);

(do "$RealBin/satlink_lib.pl") or
    die("Error loading $RealBin/satlink_lib.pl: $!\n");

# We stupidly assume the input file is the last argument, just because it's
# easy to do and means we don't need to know all of the options that the solver
# takes.

fatal("no arguments") if (@ARGV == 0);

my $infile = $ARGV[@ARGV-1];
fatal("file not found: $infile\n") if (! -f $infile);

my $proof_file = satlink_temp_file();

my @args = ();

if (!$ENV{"SATLINK_TRUST_SOLVER"})
{
    @args = (@args,
	     "-drup=" . $proof_file,
	     "-no-enabled_cp3");
}

@args = (@args, @ARGV); # Tack on [OPTIONS] FILE

run_sat_and_check("riss3gSimp", \@args, $infile, $proof_file);
satlink_cleanup();

exit(0);
