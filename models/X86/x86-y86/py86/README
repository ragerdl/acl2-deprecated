This directory contains an early attempt to reason using an alist
representation of memory instead of a stobj array (logically, a long
linear list).  As a result, it was possible to use the GL package in
code proofs; see theorems at the end of popcount.lisp.

However, this directory has been superseded by ../../y86-abs/, which
uses abstract stobjs for the same purpose.  Unlike the present
directory, which emulated stobjs by hand-coding all accessors and
updaters, abstract stobjs provide a more principled and automated way
to allow not only the use of GL for code proofs, but also to support
fast memory reads and writes without guard-checking of stobj
invariants, while reducing hypotheses in read-over-write proofs as
compared to using ordinary (concrete) stobjs.
