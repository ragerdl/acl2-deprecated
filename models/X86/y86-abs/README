The y86-abs books contain an ACL2-based specification of the Y86
microprocessor, like the x86-y86 books.  However, they are different
from the x86-y86 books in the sense that we use abstract stobjs,
introduced in ACL2 version 5.0, for reasoning and execution
efficiency.  Also, these books have a space-efficient implementation
of the memory model --- instead of allocating 4 GB of memory all at
once like the x86-y86 books do, we allocate memory on demand.  We
define and prove invariants on the state of the Y86, and use them to
prove that there are no runtime simulator errors.

======================================================================
Subdirectories in y86-abs:
======================================================================

common:   contains books that define the Y86 state (both concrete and
          abstract), and read-over-write theorems for the components
          of the state.

y86:      contains books that define the instruction interpreter for
          the Y86, and an assembler for the Y86 simulator.

examples: contains proofs of correctness (using GL's symbolic
          execution) of Y86 binary code (see README for details).
