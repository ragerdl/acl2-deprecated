; Copyright (C) 2013, Regents of the University of Texas
; Written by Matt Kaufmann, August, 2013
; License: A 3-clause BSD license.  See the LICENSE file distributed with ACL2.

; See else-star.lisp.  We check here that the expansion is only stored when
; expected.

(in-package "ACL2")

(include-book "make-event-keywords-or-exp") ; establishes dependency

(make-event
 (er-let* ((forms (read-file "make-event-keywords-or-exp.cert" state)))
   (cond ((equal (cadr (member-eq :expansion-alist forms))
                 '((7 RECORD-EXPANSION
                      (DEFUN-MEASURES F1 (X0 X1 X2 X3)
                        (IF (CONSP X0)
                            (IF (CONSP X1)
                                (IF (CONSP X2)
                                    (IF (CONSP X3)
                                        (F1 (CONS X0 X0)
                                            (CONS X1 X1)
                                            (CDR X2)
                                            (CDR X3))
                                        X3)
                                    X2)
                                X1)
                            X0))
                      (DEFUN F1 (X0 X1 X2 X3)
                        (DECLARE (XARGS :MEASURE (ACL2-COUNT X2)))
                        (IF (CONSP X0)
                            (IF (CONSP X1)
                                (IF (CONSP X2)
                                    (IF (CONSP X3)
                                        (F1 (CONS X0 X0)
                                            (CONS X1 X1)
                                            (CDR X2)
                                            (CDR X3))
                                        X3)
                                    X2)
                                X1)
                            X0)))
                   (8
                    RECORD-EXPANSION
                    (DEFUN-MEASURES-CHECK F1C (X0 X1 X2 X3)
                      (IF (CONSP X0)
                          (IF (CONSP X1)
                              (IF (CONSP X2)
                                  (IF (CONSP X3)
                                      (F1C (CONS X0 X0)
                                           (CONS X1 X1)
                                           (CDR X2)
                                           (CDR X3))
                                      X3)
                                  X2)
                              X1)
                          X0))
                    (MAKE-EVENT
                     '(:OR (:DO-PROOFS (DEFUN F1C (X0 X1 X2 X3)
                                         (DECLARE (XARGS :MEASURE (ACL2-COUNT X0)))
                                         (IF (CONSP X0)
                                             (IF (CONSP X1)
                                                 (IF (CONSP X2)
                                                     (IF (CONSP X3)
                                                         (F1C (CONS X0 X0)
                                                              (CONS X1 X1)
                                                              (CDR X2)
                                                              (CDR X3))
                                                         X3)
                                                     X2)
                                                 X1)
                                             X0)))
                           (:DO-PROOFS (DEFUN F1C (X0 X1 X2 X3)
                                         (DECLARE (XARGS :MEASURE (ACL2-COUNT X1)))
                                         (IF (CONSP X0)
                                             (IF (CONSP X1)
                                                 (IF (CONSP X2)
                                                     (IF (CONSP X3)
                                                         (F1C (CONS X0 X0)
                                                              (CONS X1 X1)
                                                              (CDR X2)
                                                              (CDR X3))
                                                         X3)
                                                     X2)
                                                 X1)
                                             X0)))
                           (:DO-PROOFS (DEFUN F1C (X0 X1 X2 X3)
                                         (DECLARE (XARGS :MEASURE (ACL2-COUNT X2)))
                                         (IF (CONSP X0)
                                             (IF (CONSP X1)
                                                 (IF (CONSP X2)
                                                     (IF (CONSP X3)
                                                         (F1C (CONS X0 X0)
                                                              (CONS X1 X1)
                                                              (CDR X2)
                                                              (CDR X3))
                                                         X3)
                                                     X2)
                                                 X1)
                                             X0)))
                           (:DO-PROOFS (DEFUN F1C (X0 X1 X2 X3)
                                         (DECLARE (XARGS :MEASURE (ACL2-COUNT X3)))
                                         (IF (CONSP X0)
                                             (IF (CONSP X1)
                                                 (IF (CONSP X2)
                                                     (IF (CONSP X3)
                                                         (F1C (CONS X0 X0)
                                                              (CONS X1 X1)
                                                              (CDR X2)
                                                              (CDR X3))
                                                         X3)
                                                     X2)
                                                 X1)
                                             X0))))
                     :CHECK-EXPANSION (DEFUN F1C (X0 X1 X2 X3)
                                        (DECLARE (XARGS :MEASURE (ACL2-COUNT X2)))
                                        (IF (CONSP X0)
                                            (IF (CONSP X1)
                                                (IF (CONSP X2)
                                                    (IF (CONSP X3)
                                                        (F1C (CONS X0 X0)
                                                             (CONS X1 X1)
                                                             (CDR X2)
                                                             (CDR X3))
                                                        X3)
                                                    X2)
                                                X1)
                                            X0))))))
          (value '(value-triple nil)))
         (t (er soft 'top
                "Unexpected form in else-star.cert!")))))
